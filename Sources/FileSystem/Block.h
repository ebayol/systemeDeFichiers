/* #################################################################################################### */
/* ###                                            BLOCKS                                            ### */
/* #################################################################################################### */
#ifndef BLOCK_H
#define BLOCK_H

// Dependances standards:
#include "../Includes.h"

/* **************************************************************************************************** */
/* ***                                        TYPE DEFINITION                                       *** */
/* **************************************************************************************************** */

typedef struct {

	union {
		uint32_t* data;
		u_int adressNextEmpty;
	};

} Block;

/* **************************************************************************************************** */
/* ***                                   CONSTRUCTOR / DESTRUCTOR                                   *** */
/* **************************************************************************************************** */

Block* b_Allocate ( uint32_t block_size );
Block* b_Free     ( Block* this );

/* **************************************************************************************************** */
/* ***                                            ACCESSOR                                          *** */
/* **************************************************************************************************** */

const uint32_t* b_getData   ( Block* this );
uint32_t        b_getDataAt ( Block* this, u_int id );

/* **************************************************************************************************** */
/* ***                                            MUTATOR                                           *** */
/* **************************************************************************************************** */

Block* b_setAdressNextEmpty ( Block* this, u_int adressNextEmpty );
Block* b_setData            ( Block* this, const uint32_t* data );
Block* b_setDataAt          ( Block* this, u_int index, uint32_t data );

#endif /* FIN BLOCK_H */
/* #################################################################################################### */
