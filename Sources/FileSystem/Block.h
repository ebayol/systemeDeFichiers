

/* #################################################################################################### */
/* ###                                            BLOCKS                                            ### */
/* #################################################################################################### */
#ifndef BLOCK_H_
#define BLOCK_H_

// Dependances standards:
#include "../Includes.h"

/* **************************************************************************************************** */
/* ***                                        TYPE DEFINITION                                       *** */
/* **************************************************************************************************** */


typedef struct {

	union {
		uint32_t* data;
		adress adressNextEmpty;
	};

} Block;

/* **************************************************************************************************** */
/* ***                                   CONSTRUCTOR / DESTRUCTOR                                   *** */
/* **************************************************************************************************** */

Block* b_Allocate ( uint32_t block_size );
Block* b_Free     ( Block* this );

/* **************************************************************************************************** */
/* ***                                            ACCESSOR                                          *** */
/* **************************************************************************************************** */

adress          b_getAdressNextEmpty ( Block* this );
const uint32_t* b_getData            ( Block* this );
uint32_t        b_getDataAt          ( Block* this, adress id );

/* **************************************************************************************************** */
/* ***                                            MUTATOR                                           *** */
/* **************************************************************************************************** */

Block* b_setAdressNextEmpty ( Block* this, adress adressNextEmpty );
Block* b_setData            ( Block* this, const uint32_t* data );
Block* b_setDataAt          ( Block* this, adress index, uint32_t data );

#endif /* FIN BLOCK_H_ */
/* #################################################################################################### */
